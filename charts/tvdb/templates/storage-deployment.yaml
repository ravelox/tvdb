apiVersion: apps/v1
kind: Deployment
metadata:
  name: tvdb-storage-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: tvdb
    tier: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tvdb
  template:
    metadata:
      labels:
        app: tvdb
        tier: storage
    spec:
{{- if and (not .Values.storage.existingSecret) (not .Values.storage.password) }}
      {{- fail "Either storage.password or storage.existingSecret must be provided" }}
{{- end }}
      restartPolicy: {{ default "Always" .Values.storage.restartPolicy | quote }}
      initContainers:
        - name: remove-lostfound
          image: busybox
          command: ["rm", "-rf", "/var/lib/mysql/lost+found"]
          volumeMounts:
            - name: tvdb-storage-volume
              mountPath: /var/lib/mysql
      containers:
      - image: {{ .Values.storage.image.repository }}:{{ .Values.storage.image.tag }}
        imagePullPolicy: IfNotPresent
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "tvdb.storageSecretName" . }}
              key: {{ .Values.storage.passwordKey }}
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: tvdb-storage-volume
          mountPath: /var/lib/mysql
      volumes:
      - name: tvdb-storage-volume
        persistentVolumeClaim:
          claimName: tvdb-storage-pvc
